<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@1400.v7fd111b_ec82f">
  <actions>
    <hudson.model.ParametersAction>
      <safeParameters class="sorted-set"/>
      <parameters>
        <hudson.model.StringParameterValue>
          <name>REQUESTED_ACTION</name>
          <value>Release</value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>BRANCH</name>
          <description>Git branch to build</description>
          <value>main</value>
        </hudson.model.StringParameterValue>
      </parameters>
      <parameterDefinitionNames>
        <string>REQUESTED_ACTION</string>
        <string>BRANCH</string>
      </parameterDefinitionNames>
    </hudson.model.ParametersAction>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>admin</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <jenkins.metrics.impl.TimeInQueueAction plugin="metrics@4.2.21-458.vcf496cb_839e4">
      <queuingDurationMillis>2</queuingDurationMillis>
      <blockedDurationMillis>0</blockedDurationMillis>
      <buildableDurationMillis>0</buildableDurationMillis>
      <waitingDurationMillis>0</waitingDurationMillis>
    </jenkins.metrics.impl.TimeInQueueAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="pipeline-groovy-lib@745.vdf6077913de0">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <org.jenkinsci.plugins.workflow.cps.EnvActionImpl plugin="workflow-cps@4000.v5198556e9cea_">
      <env class="tree-map"/>
    </org.jenkinsci.plugins.workflow.cps.EnvActionImpl>
    <jenkins.metrics.impl.SubTaskTimeInQueueAction plugin="metrics@4.2.21-458.vcf496cb_839e4">
      <queuingDurationMillis>5</queuingDurationMillis>
      <blockedDurationMillis>0</blockedDurationMillis>
      <buildableDurationMillis>3</buildableDurationMillis>
      <waitingDurationMillis>0</waitingDurationMillis>
      <executingDurationMillis>178</executingDurationMillis>
      <workUnitCount>1</workUnitCount>
    </jenkins.metrics.impl.SubTaskTimeInQueueAction>
    <org.jenkins.plugins.lockableresources.actions.LockedResourcesBuildAction plugin="lockable-resources@1327.ved786b_a_197e0">
      <logs/>
      <resourcesInUse/>
    </org.jenkins.plugins.lockableresources.actions.LockedResourcesBuildAction>
  </actions>
  <queueId>27</queueId>
  <timestamp>1755799562514</timestamp>
  <startTime>1755799562520</startTime>
  <result>FAILURE</result>
  <duration>476</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>FAILURE</result>
    <script>
node {
    try {
        stage(&apos;Checkout&apos;) {
            checkout([$class: &apos;GitSCM&apos;,
                branches: [[name: &quot;${params.BRANCH}&quot;]],
                userRemoteConfigs: [[credentialsId: &apos;user-github&apos;, url: git_repo]]
            ])
        }

        if (false) {
            stage(&apos;Build Docker Image&apos;) {
                sh &quot;&quot;&quot;
                docker buildx create --name mybuilder --use || true
                docker buildx inspect --bootstrap
                docker buildx build --platform linux/amd64,linux/arm64 -t yourdockerhubuser/laravel-app:${params.BRANCH}-${GIT_COMMIT} .
                &quot;&quot;&quot;
            }
        }

        if (false) {
            stage(&apos;Trivy Security Scan&apos;) {
                sh &quot;&quot;&quot;
                if ! command -v trivy &amp;&gt; /dev/null; then
                    curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh
                fi
                trivy image --severity HIGH,CRITICAL --exit-code 1 yourdockerhubuser/laravel-app:${params.BRANCH}-${GIT_COMMIT}
                &quot;&quot;&quot;
            }
        }

        if (false) {
            stage(&apos;Push Docker Image&apos;) {
                sh &quot;&quot;&quot;
                docker push yourdockerhubuser/laravel-app:${params.BRANCH}-${GIT_COMMIT}
                &quot;&quot;&quot;
            }
        }

        if (false) {
            stage(&apos;Test Docker Image&apos;) {
                sh &quot;&quot;&quot;
                docker run --rm yourdockerhubuser/laravel-app:${params.BRANCH}-${GIT_COMMIT}                     php artisan test
                &quot;&quot;&quot;
            }
        }

        if (false) {
            stage(&apos;Run Docker Container&apos;) {
                sh &quot;&quot;&quot;
                docker run -d --name laravel-app-test -p 8081:80 yourdockerhubuser/laravel-app:${params.BRANCH}-${GIT_COMMIT}
                &quot;&quot;&quot;
            }
        }

    } catch (e) {
        currentBuild.result = &quot;FAILED&quot;
        throw e
    }
}
</script>
    <loadedScripts class="linked-hash-map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>52422670</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>285993785</long>
      </entry>
      <entry>
        <string>runQueue</string>
        <long>465724957</long>
      </entry>
      <entry>
        <string>run</string>
        <long>260680084</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>184564000</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>143393917</long>
      </entry>
    </timings>
    <internalCalls class="sorted-set"/>
    <sandbox>true</sandbox>
    <iota>11</iota>
    <head>1:11</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
    <storageDir>workflow-completed</storageDir>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList"/>
</flow-build>